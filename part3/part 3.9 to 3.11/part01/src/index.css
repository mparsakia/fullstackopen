body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;   
  margin: 0;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New";
}

h1{
  text-decoration: underline;
}

.phonebook {  
  margin: 20px;
  color: black;
  font-size: 14px;
}

.add {
  font-size: 14px;
  color :black;
}

.error {
  color: red;
  background: lightgrey;
  font-size: 20px;
  border-style: solid;
  border-radius: 5px;
  padding: 10px;
  margin-bottom: 10px;
  width: 40vw;
}

.success {
  color: green;
  background: lightgrey;
  font-size: 20px;
  border-style: solid;
  border-radius: 5px;
  padding: 10px;
  margin-bottom: 10px;
  width: 40vw;
}


/*
In regular HTML, classes are defined as the value of the class attribute:
<li class="note">some text...</li>

In React we have to use the className attribute instead of the class attribute. 
With this in mind, let's make the following changes to our Note component:

  const label = note.important 
    ? 'make not important' 
    : 'make important';

  return (
    <li className='note'>
      {note.content} 
      <button onClick={toggleImportance}>{label}</button>
    </li>
  )
}

Class selectors are defined with the .classname syntax:

.note {
  color: grey;
  padding-top: 5px;
  font-size: 15px;
}

React also makes it possible to write styles directly in the code as so-called inline styles.

const Footer = () => {
  const footerStyle = {
    color: 'green',
    fontStyle: 'italic',
    fontSize: 16
  }

  return (
    <div style={footerStyle}>
      <br />
      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>
    </div> 
  )
}

Inline styles come with certain limitations. For instance, 
so-called pseudo-classes can't be used straightforwardly.

Note: traditionally it was best practice to separate JS, HTML, CSS into their own files.
Since react is a tool for building UI, it actually makes more sense to put all of the 
JS, HTML, CSS within the React component rather than dealing with separate CSS file.





*/